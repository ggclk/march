"income_source_12",
"income_source_13",      # 28
"stability_strategy_1",
"stability_strategy_2",
"stability_strategy_3",
"stability_strategy_4",
"stability_strategy_5",
"stability_strategy_6",
"stability_strategy_7",
"stability_strategy_8",
"stability_strategy_9",
"stability_strategy_10",
"stability_factors_1",
"stability_factors_2",
"stability_factors_3",
"stability_factors_4",
"stability_factors_5",
"stability_factors_6",
"stability_factors_7",
"stability_factors_8",
"stability_factors_9",
"stability_factors_10",
"stability_factors_11",
"money_from_practice",   # 50
"money_from_related_practice",
"money_from_unrelated_pracrice",
"hours_per_week_making_art",
"hours_per_week_admin",
"income_reinvestment",
"atte_art_events",
"hours_per_week_art_news",
"hours_per_week_social_media", # 58
"audience_size",
"gallery_stability_old",
"gallery_stability",
"gallery_develop",
"gallery_career",
"gallery_reccommend",
"degree_stability",            # 65
"degree_develop",
"degree_career",
"degree_recommend",
"support_stability",
"support_develop",
"support_career",
"support_recommend",
"commissions_stability",
"comissions_develop",
"comissions_career",
"comissions_recommend",
"sales_stability",
"sales_develop",
"sales_career",
"sales_recommend",
"stability_freeform",
"stability_resources",
"approach_freeform",
"younger_version_freeform",
"email",
"date_created", # 86
"created_by",
"last_updated",
"updated_by",
"ip_address",
"last_page_accessed",
"completion_status"
)
ggplot(d, aes(x=stability_confidence, satisfaction_artist)) + geom_point()
ggplot(d, aes(x=stability_confidence, satisfaction_artist)) + geom_point(jitter(0.5))
ggplot(d, aes(x=stability_confidence, satisfaction_artist)) + geom_point() + geom_jitter()
cor(d$stability_confidence, d$satisfaction_artist)
cor(na.omit(d$stability_confidence), na.omit(d$satisfaction_artist))
ggplot(d, aes(x=stability_confidence, satisfaction_artist)) + geom_point() + geom_jitter()
cor(na.omit(d$stability_confidence), na.omit(d$satisfaction_artist))
cor(na.omit(d$stability_confidence), na.omit(d$satisfaction_artist))
head(d)
summary(d)
table(d$income)
table(d$years_active)
library(starteR)
library(starteR)
d <- query_redshift('SELECT shipping_amount FROM ksr.backings ORDER BY RANDOM() LIMIT 100000')
ggplot(d, aes(x=shipping_amount)) + geom_histogram()
library(ggplot2)
ggplot(d, aes(x=shipping_amount)) + geom_histogram()
library(starteR)
library(ggplot2)
d <- query_redshift('SELECT shipping_amount FROM ksr.backings ORDER BY RANDOM() LIMIT 100000')
ggplot(d, aes(x=shipping_amount)) + geom_histogram() + xlim(0, 1000)
ggplot(d, aes(x=shipping_amount)) + geom_histogram() + xlim(0, 100)
summary(d$shipping_amount)
library(starteR)
d <- query_redshift('
SELECT
*
FROM ksr.projects
LIMIT 10;
')
library(data)
iris
names(iris) <= c('sepal_length', 'sepal_width', 'petal_length', 'petal_width', 'species')
iris
names(iris) <- c('sepal_length', 'sepal_width', 'petal_length', 'petal_width', 'species')
iris
names(iris) <- c('sepal_length', 'sepal_width', 'petal_length', 'petal_width', 'species')
write.table(iris, '~/ksr/trainmaker/test/fixtures/iris.csv', sep='|', row.names=F, header=F)
names(iris) <- c('sepal_length', 'sepal_width', 'petal_length', 'petal_width', 'species')
write.table(iris, '~/ksr/trainmaker/test/fixtures/iris.csv', sep='|', row.names=F, headers=F)
names(iris) <- c('sepal_length', 'sepal_width', 'petal_length', 'petal_width', 'species')
write.table(iris, '~/ksr/trainmaker/test/fixtures/iris.csv', sep='|', row.names=F, col.names = F)
names(iris) <- c('sepal_length', 'sepal_width', 'petal_length', 'petal_width', 'species')
write.table(iris, '~/ksr/trainmaker/tests/fixtures/iris.csv', sep='|', row.names=F, col.names = F)
head(iris)
library("starteR")
View(conn)
```{r setup, results = 'hide', message = FALSE, warning = FALSE, echo = FALSE, cache = TRUE}
library(data.table)
library(dplyr)
library(ggplot2)
setwd('~/ksr/datastarter/research/podcast_backers/')
d <- query_redshift("
SELECT
date_trunc('month', projects.launched_at) as launch_month,
COUNT(DISTINCT projects.id) as project_count,
COUNT(DISTINCT backings.backer_id) as backer_count
FROM
ksr.projects
LEFT JOIN
ksr.campaign_profiles ON campaign_profiles.project_id = projects.id
LEFT JOIN
ksr.translations ON translations.translatable_id = campaign_profiles.id
AND translations.translatable_type = 'CampaignProfile'
LEFT JOIN
ksr.backings ON
projects.id = ksr.backings.project_id
AND backings.status NOT IN ('preauth', 'cancelled')
WHERE
(lower(translations.content) LIKE '%podcast%' OR lower(campaign_profiles.description) LIKE '%podcast%' OR lower(projects.blurb) LIKE '%podcast%' OR lower(projects.name) LIKE '%podcast%')
AND ksr.projects.launched_at IS NOT NULL
GROUP BY 1
ORDER BY 1 ASC;")
```{r fetch-projects, }
```{r fetch-projects, }
ggplot(d, aes(x=launch_month, y=project_count)) + geom_line() + labs(title="Podcast projects over time")
d <- query_redshift("
SELECT
date_trunc('month', projects.launched_at) as launch_month,
COUNT(DISTINCT projects.id) as project_count,
COUNT(DISTINCT backings.backer_id) as backer_count
FROM
ksr.projects
LEFT JOIN
ksr.campaign_profiles ON campaign_profiles.project_id = projects.id
LEFT JOIN
ksr.translations ON translations.translatable_id = campaign_profiles.id
AND translations.translatable_type = 'CampaignProfile'
LEFT JOIN
ksr.backings ON
projects.id = ksr.backings.project_id
AND backings.status NOT IN ('preauth', 'cancelled')
WHERE
(lower(translations.content) LIKE '%podcast%' OR lower(campaign_profiles.description) LIKE '%podcast%' OR lower(projects.blurb) LIKE '%podcast%' OR lower(projects.name) LIKE '%podcast%')
AND ksr.projects.launched_at IS NOT NULL
GROUP BY 1
ORDER BY 1 ASC;")
ggplot(d, aes(x=launch_month, y=project_count)) + geom_line() + labs(title="Podcast projects over time")
head(d$project_count)
summary(d$project_count)
d <- query_redshift("
SELECT
date_trunc('month', projects.launched_at) as launch_month,
COUNT(DISTINCT projects.id)::int as project_count,
COUNT(DISTINCT backings.backer_id)::int as backer_count
FROM
ksr.projects
LEFT JOIN
ksr.campaign_profiles ON campaign_profiles.project_id = projects.id
LEFT JOIN
ksr.translations ON translations.translatable_id = campaign_profiles.id
AND translations.translatable_type = 'CampaignProfile'
LEFT JOIN
ksr.backings ON
projects.id = ksr.backings.project_id
AND backings.status NOT IN ('preauth', 'cancelled')
WHERE
(lower(translations.content) LIKE '%podcast%' OR lower(campaign_profiles.description) LIKE '%podcast%' OR lower(projects.blurb) LIKE '%podcast%' OR lower(projects.name) LIKE '%podcast%')
AND ksr.projects.launched_at IS NOT NULL
GROUP BY 1
ORDER BY 1 ASC;")
summary(d$project_count)
ggplot(d, aes(x=launch_month, y=project_count)) + geom_line() + labs(title="Podcast projects over time")
sum(d$project_count)
d <- query_redshift("
SELECT
COUNT(DISTINCT projects.id)::int as project_count,
COUNT(DISTINCT backings.backer_id)::int as backer_count
FROM
ksr.projects
LEFT JOIN
ksr.campaign_profiles ON campaign_profiles.project_id = projects.id
LEFT JOIN
ksr.translations ON translations.translatable_id = campaign_profiles.id
AND translations.translatable_type = 'CampaignProfile'
LEFT JOIN
ksr.backings ON
projects.id = ksr.backings.project_id
AND backings.status NOT IN ('preauth', 'cancelled')
WHERE
(lower(translations.content) LIKE '%podcast%' OR lower(campaign_profiles.description) LIKE '%podcast%' OR lower(projects.blurb) LIKE '%podcast%' OR lower(projects.name) LIKE '%podcast%')
AND ksr.projects.launched_at IS NOT NULL;")
d$backer_count
d <- query_redshift("
SELECT
COUNT(DISTINCT projects.id)::int as project_count,
COUNT(DISTINCT backings.backer_id)::int as backer_count
FROM
ksr.projects
LEFT JOIN
ksr.campaign_profiles ON campaign_profiles.project_id = projects.id
LEFT JOIN
ksr.translations ON translations.translatable_id = campaign_profiles.id
AND translations.translatable_type = 'CampaignProfile'
LEFT JOIN
ksr.backings ON
projects.id = ksr.backings.project_id
AND backings.status NOT IN ('preauth', 'cancelled')
WHERE
(lower(translations.content) LIKE '%podcast%' OR lower(campaign_profiles.description) LIKE '%podcast%' OR lower(projects.blurb) LIKE '%podcast%' OR lower(projects.name) LIKE '%podcast%')
AND ksr.projects.launched_at IS NOT NULL
AND extract('year' from ksr.projects.launched_at)::int >= 2016;")
d$backer_count
```{r}
WD <- '/Users/brianabelson/prj/march'
setwd(WD)
```
d <- read.csv('march-raids-boroughs-filled.csv', as.is=T)
library(ggplot2)
head(d)
library(lubridate)
install.packages("lubridate")
d$inspection_date <- mdy_hm(d$inspection_date)
library(lubridate)
d$inspection_date <- mdy_hms(d$inspection_date)
d <- read.csv('march-raids-boroughs-filled.csv', as.is=T)
head(d)
d$inspection_date <- mdy_hm(d$inspection_date)
head(d)
library(dplyr)
d %>%
group_by(inspection_date) %>%
summarise(count = n())
by_date <- d %>%
group_by(inspection_date) %>%
summarise(count = n())
ggplot(d, aes(x=inspection_date, y=count)) + geom_line()
ggplot(by_date, aes(x=inspection_date, y=count)) + geom_line()
d <- read.csv('march-raids-boroughs-filled.csv', as.is=T)
names(d)
by_date <- d %>%
group_by(inspection_date, bin_number) %>%
summarise(count = n())
by_date
by_date <- d %>%
group_by(inspection_date, bin_number) %>%
summarise(count = n()) %>%
order_by(count)
by_date <- d %>%
group_by(inspection_date, bin_number) %>%
summarise(count = n()) %>%
arrange(count)
by_date
tail(by_date)
d <- read.csv('march-raids-boroughs-filled.csv', as.is=T)
d$inspection_date <- ymd_hm(d$inspection_date)
d$inspection_date <- mdy(d$inspection_date)
d <- read.csv('march-raids-boroughs-filled.csv', as.is=T)
d$inspection_date <- mdy(d$inspection_date)
d <- read.csv('march-raids-boroughs-filled.csv', as.is=T)
d$inspection_date <- mdy_hm(d$inspection_date)
by_date <- d %>%
group_by(inspection_date, bin_number) %>%
summarise(count = n()) %>%
arrange(count)
head(by_date)
d$inspection_month <- month(d$inspection_date)
by_date <- d %>%
group_by(inspection_month) %>%
summarise(count = n()) %>%
arrange(count)
by_date
by_date <- d %>%
group_by(inspection_month) %>%
summarise(count = n()) %>%
arrange(inspection_month)
ggplot(by_date, aes(x=inspection_month, y=count)) + geom_bar()
ggplot(by_date, aes(x=inspection_month, y=count)) + geom_line()
d$inspection_day <- day(d$inspection_date)
by_date <- d %>%
group_by(inspection_day) %>%
summarise(count = n()) %>%
arrange(inspection_month)
by_date <- d %>%
group_by(inspection_day) %>%
summarise(count = n()) %>%
arrange(inspection_day)
ggplot(by_date, aes(x=inspection_day, y=count)) + geom_line()
by_date <- d %>%
group_by(inspection_month) %>%
summarise(count = n()) %>%
arrange(inspection_month)
ggplot(by_date, aes(x=inspection_month, y=count)) + geom_line()
ggplot(by_date, aes(x=inspection_month, y=count)) + geom_line() + ylim(0, 250)
ggplot(by_date, aes(x=inspection_month, y=count)) + geom_line() + ylim(0, 275)
names(d)
by_date <- d %>%
group_by(address, inspection_date) %>%
summarise(min(access_1)) %>%
arrange(inspection_month)
by_date <- d %>%
group_by(address, inspection_date) %>%
summarise(min(access_1)) %>%
d %>%
group_by(address, inspection_date) %>%
summarise(min(access_1)) %>%
group_by(access_1) %>%
summarise(count=n())
d %>%
group_by(address, inspection_date) %>%
summarise(min(access_1)) %>%
group_by(access_1) %>%
summarise(count=n())
d %>%
group_by(address, inspection_date) %>%
summarise(access_1=min(access_1)) %>%
group_by(access_1) %>%
summarise(count=n())
d %>%
group_by(address, inspection_date) %>%
summarise(access_1=min(access_1)) %>%
group_by(access_1) %>%
summarise(count=n()) %>%
arrange(desc(count))
library(data.table)
library(dplyr)
library(ggplot2)
library(starteR)
setwd('~/ksr/datastarter/research/podcast_backers/')
d <- query_redshift("
SELECT
COUNT(DISTINCT projects.id)::int as project_count,
COUNT(DISTINCT backings.backer_id)::int as backer_count
FROM
ksr.projects
LEFT JOIN
ksr.campaign_profiles ON campaign_profiles.project_id = projects.id
LEFT JOIN
ksr.translations ON translations.translatable_id = campaign_profiles.id
AND translations.translatable_type = 'CampaignProfile'
LEFT JOIN
ksr.backings ON
projects.id = ksr.backings.project_id
AND backings.status NOT IN ('preauth', 'cancelled')
WHERE
(lower(translations.content) LIKE '%podcast%' OR lower(campaign_profiles.description) LIKE '%podcast%' OR lower(projects.blurb) LIKE '%podcast%' OR lower(projects.name) LIKE '%podcast%')
AND ksr.projects.launched_at IS NOT NULL;")
d <- query_redshift("
SELECT
COUNT(DISTINCT projects.id)::int as project_count,
COUNT(DISTINCT backings.backer_id)::int as backer_count
FROM
ksr.projects
LEFT JOIN
ksr.campaign_profiles ON campaign_profiles.project_id = projects.id
LEFT JOIN
ksr.translations ON translations.translatable_id = campaign_profiles.id
AND translations.translatable_type = 'CampaignProfile'
LEFT JOIN
ksr.backings ON
projects.id = ksr.backings.project_id
AND backings.status NOT IN ('preauth', 'cancelled')
WHERE
(lower(translations.content) LIKE '%podcast%' OR lower(campaign_profiles.description) LIKE '%podcast%' OR lower(projects.blurb) LIKE '%podcast%' OR lower(projects.name) LIKE '%podcast%')
AND ksr.projects.launched_at IS NOT NULL;")
head(d$backer_count)
d <- query_redshift("
with projects AS (
SELECT
backings.backer_id
COUNT(DISTINCT projects.id)::int as projects_backed,
FROM
ksr.projects
LEFT JOIN
ksr.campaign_profiles ON campaign_profiles.project_id = projects.id
LEFT JOIN
ksr.translations ON translations.translatable_id = campaign_profiles.id
AND translations.translatable_type = 'CampaignProfile'
LEFT JOIN
ksr.backings ON
projects.id = ksr.backings.project_id
AND backings.status NOT IN ('preauth', 'cancelled')
WHERE
(lower(translations.content) LIKE '%podcast%' OR lower(campaign_profiles.description) LIKE '%podcast%' OR lower(projects.blurb) LIKE '%podcast%' OR lower(projects.name) LIKE '%podcast%')
AND ksr.projects.launched_at IS NOT NULL
)
SELECT COUNT(1)
FROM projects
WHERE projects_backed >= 2
")
d <- query_redshift("
with projects AS (
SELECT
backings.backer_id,
COUNT(DISTINCT projects.id)::int as projects_backed,
FROM
ksr.projects
LEFT JOIN
ksr.campaign_profiles ON campaign_profiles.project_id = projects.id
LEFT JOIN
ksr.translations ON translations.translatable_id = campaign_profiles.id
AND translations.translatable_type = 'CampaignProfile'
LEFT JOIN
ksr.backings ON
projects.id = ksr.backings.project_id
AND backings.status NOT IN ('preauth', 'cancelled')
WHERE
(lower(translations.content) LIKE '%podcast%' OR lower(campaign_profiles.description) LIKE '%podcast%' OR lower(projects.blurb) LIKE '%podcast%' OR lower(projects.name) LIKE '%podcast%')
AND ksr.projects.launched_at IS NOT NULL
GROUP BY 1
)
SELECT COUNT(1)
FROM projects
WHERE projects_backed >= 2
")
d <- query_redshift("
with projects AS (
SELECT
backings.backer_id,
COUNT(DISTINCT projects.id)::int as projects_backed
FROM
ksr.projects
LEFT JOIN
ksr.campaign_profiles ON campaign_profiles.project_id = projects.id
LEFT JOIN
ksr.translations ON translations.translatable_id = campaign_profiles.id
AND translations.translatable_type = 'CampaignProfile'
LEFT JOIN
ksr.backings ON
projects.id = ksr.backings.project_id
AND backings.status NOT IN ('preauth', 'cancelled')
WHERE
(lower(translations.content) LIKE '%podcast%' OR lower(campaign_profiles.description) LIKE '%podcast%' OR lower(projects.blurb) LIKE '%podcast%' OR lower(projects.name) LIKE '%podcast%')
AND ksr.projects.launched_at IS NOT NULL
GROUP BY 1
)
SELECT COUNT(1)
FROM projects
WHERE projects_backed >= 2
")
d
d <- query_redshift("
with projects AS (
SELECT
backings.backer_id,
COUNT(DISTINCT projects.id)::int as projects_backed
FROM
ksr.projects
LEFT JOIN
ksr.campaign_profiles ON campaign_profiles.project_id = projects.id
LEFT JOIN
ksr.translations ON translations.translatable_id = campaign_profiles.id
AND translations.translatable_type = 'CampaignProfile'
LEFT JOIN
ksr.backings ON
projects.id = ksr.backings.project_id
AND backings.status NOT IN ('preauth', 'cancelled')
WHERE
(lower(translations.content) LIKE '%podcast%' OR lower(campaign_profiles.description) LIKE '%podcast%' OR lower(projects.blurb) LIKE '%podcast%' OR lower(projects.name) LIKE '%podcast%')
AND ksr.projects.launched_at IS NOT NULL
GROUP BY 1
)
SELECT COUNT(1)
FROM projects
WHERE projects_backed >= 4
")
d
d <- query_redshift("
with projects AS (
SELECT
backings.backer_id,
COUNT(DISTINCT projects.id)::int as projects_backed
FROM
ksr.projects
LEFT JOIN
ksr.campaign_profiles ON campaign_profiles.project_id = projects.id
LEFT JOIN
ksr.translations ON translations.translatable_id = campaign_profiles.id
AND translations.translatable_type = 'CampaignProfile'
LEFT JOIN
ksr.backings ON
projects.id = ksr.backings.project_id
AND backings.status NOT IN ('preauth', 'cancelled')
WHERE
(lower(translations.content) LIKE '%podcast%' OR lower(campaign_profiles.description) LIKE '%podcast%' OR lower(projects.blurb) LIKE '%podcast%' OR lower(projects.name) LIKE '%podcast%')
AND ksr.projects.launched_at IS NOT NULL
GROUP BY 1
)
SELECT COUNT(1)
FROM projects
WHERE projects_backed >= 10
")
d
library(starteR)
